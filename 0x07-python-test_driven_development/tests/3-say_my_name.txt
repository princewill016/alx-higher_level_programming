The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

Import the function:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Test basic usage:
    >>> say_my_name("John", "Smith")
    My name is John Smith

Test with only first name:
    >>> say_my_name("Bob")
    My name is Bob 

Test with empty last name:
    >>> say_my_name("John", "")
    My name is John 

Test non-string first name:
    >>> try:
    ...     say_my_name(12, "White")
    ... except TypeError as e:
    ...     print(e)
    first_name must be a string

Test non-string last name:
    >>> try:
    ...     say_my_name("John", 12)
    ... except TypeError as e:
    ...     print(e)
    last_name must be a string

Test missing first name:
    >>> try:
    ...     say_my_name()
    ... except TypeError as e:
    ...     print(e)
    say_my_name() missing 1 required positional argument: 'first_name'

Test with None:
    >>> try:
    ...     say_my_name(None)
    ... except TypeError as e:
    ...     print(e)
    first_name must be a string

Test with both None:
    >>> try:
    ...     say_my_name(None, None)
    ... except TypeError as e:
    ...     print(e)
    first_name must be a string

Test with empty strings:
    >>> say_my_name("", "")
    My name is
